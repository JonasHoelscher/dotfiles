#
# Variables
#
set $mod Mod4
set $left h
set $down j
set $up k
set $right l
set $term terminator
set $menu rofi -show drun

font pango: FiraCode 10

#
# Includes
#
include /etc/sway/config-vars.d/*
include /etc/sway/config.d/*

#
# Startup
#
exec_always nm-applet
exec_always swaybg --image /usr/share/wallpapers/SoftWaves/contents/images/1920x1080.svg
# Set dark mode for gtk applications
exec_always gsettings set org.gnome.desktop.interface color-scheme prefer-dark

#
# Output configuration
#
# You can get the names of your outputs by running: swaymsg -t get_outputs
## Monitors
# Laptop monitor
output eDP-1 resolution 1920x1200@60Hz
set $laptop eDP-1
bindswitch --reload --locked lid:on output $laptop disable
bindswitch --reload --locked lid:off output $laptop enable
exec_always ~/.config/sway/laptop_lid.sh

# LG monitor (desk)
output DP-10 resolution 1920x1200@60Hz

# HP monitor (desk)
output DP-8 resolution 2560x1440@60Hz

#
# Idle configuration
#
exec swayidle -w \
         timeout 1000 'swaylock -f -c 000000' \
         timeout 3000 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
         before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 1000 seconds of inactivity, then turn off
# your displays after another 3000 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

#
# Input configuration
#
# Laptop touchpad
input "10182:3985:GXTP5440:00_27C6:0F91_Touchpad" {
    dwt enabled
    tap enabled
    natural_scroll enabled
    middle_emulation enabled
}

# Laptop keyboard
input "1:1:AT_Translated_Set_2_keyboard" {
    xkb_layout de
    xkb_options caps:ctrl_modifier
}

# Keychron external keyboard
input "13364:53296:Keychron__Keychron_Link__Keyboard" {
    xkb_layout eu
    xkb_options caps:ctrl_modifier
}

#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'

    # Lock screen
    bindsym $mod+x exec swaylock
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"
#
# Utilities:
#
    # Special keys to adjust volume via PulseAudio
    bindsym --locked XF86AudioMute exec pactl set-sink-mute \@@ toggle
    bindsym --locked XF86AudioLowerVolume exec pactl set-sink-volume \@DEFAULT_SINK@ -5%
    bindsym --locked XF86AudioRaiseVolume exec pactl set-sink-volume \@DEFAULT_SINK@ +5%
    bindsym --locked XF86AudioMicMute exec pactl set-source-mute \@DEFAULT_SOURCE@ toggle
    # Special keys to adjust brightness via brightnessctl
    bindsym --locked XF86MonBrightnessDown exec brightnessctl set 5%-
    bindsym --locked XF86MonBrightnessUp exec brightnessctl set 5%+
    # Special key to take a screenshot with grim
    bindsym Print exec grim

bar {
    swaybar_command waybar
}

#
# Specific window settings
#
# Set corect mode for flameshot
for_window [app_id="flameshot"] border pixel 0, floating enable, fullscreen disable, move absolute position 0 0
for_window [app_id="org.kde.dolphin"] floating enable, move position center
for_window [app_id="org.gnome.Nautilus"] floating enable, move position center

#
# Look and feel
#
## Borders
# Also removes all title bars
    for_window [class="^.*"] border pixel 3
    default_border pixel 3
    default_floating_border pixel 3

    # Hide borders at the edge of the screen
    hide_edge_borders smart

    # Set colours various window states
    # Syntax: client.<class> <border> <background> <text> [<indicator> [<child_border>]]
    # The available classes are:
        # client.focused: The window that has focus.
        # client.focused_inactive: The most recently focused view within a container which is not focused.
        # client.placeholder: Ignored (present for i3 compatibility).
        # client.unfocused: A view that does not have focus.
        # client.urgent: A view with an urgency hint. Note: Native Wayland windows do not support urgency. Urgency only works for Xwayland windows.
    #The meaning of each color is:
        # border: The border around the title bar.
        # background: The background of the title bar.
        # text: The text color of the title bar.
        # indicator: The color used to indicate where a new view will open. In a tiled container, this would paint the right border of the current view if a new view would be opened to the right.
        # child_border: The border around the view itself.
    # The default colors are:
        # class	        border	background	text    indicator	child_border
        # background	n/a	    #ffffff     n/a	    n/a	        n/a
        # focused	    #4c7899	#285577	    #ffffff	#2e9ef4	    #285577
        # focused_inactive	#333333	#5f676a	#ffffff	#484e50	    #5f676a
        # unfocused	    #333333	#222222	    #888888	#292d2e	    #222222
        # urgent	    #2f343a	#900000	    #ffffff	#900000	    #900000
        # placeholder	#000000	#0c0c0c	    #ffffff	#000000 	#0c0c0c
    client.focused           #9aa5ce #16161d #c0caf5 #9aa5ce   #9aa5ce
    client.focused_inactive  #16161d #16161d #c0caf5 #16161d   #16161d
    client.unfocused         #16161d #16161d #c0caf5 #16161d   #16161d
## Gaps
# gaps inner|outer|horizontal|vertical|top|right|bottom|left <amount>
    # Sets default amount pixels of inner or outer gap
    # the inner affects spacing around each view
    # the outer affects the spacing around each workspace
    # To reduce or remove outer gaps, outer gaps can be set to a negative value.
    gaps inner 5
    gaps outer 1
    gaps top 1
    gaps bottom 1

    # Hide gaps when there is only 1 window
    smart_gaps on
